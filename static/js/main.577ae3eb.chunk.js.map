{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/NotificationMessage/NotificationMessage.js","components/Statistics/Statistics.js","App.js","index.js","components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["FeedbackOptions","options","onFeedback","map","option","type","data-action","onClick","className","s","button","Section","title","children","NotificationMessage","message","Statistics","good","neutral","bad","total","positivePercentage","paragraph","positive","protoTypes","PropTypes","number","isRequired","countPositiveFeedbackPercentage","App","state","countTotalFeedback","Math","round","onFeedbackIncrement","target","console","dir","dataset","action","setState","prevState","this","totalFeedbacks","positiveFeedbacks","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"8SAyBeA,EArBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,WAAZ,OACtB,8BACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBACEC,KAAK,SACLC,cAAaF,EACbG,QAASL,EACTM,UAAWC,IAAEC,OAJf,SAOGN,GAFIA,SCGEO,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,gCACE,6BAAKD,IACJC,MCHU,SAASC,EAAT,GAA2C,IAAZC,EAAW,EAAXA,QAC5C,OAAO,4BAAIA,I,oCCAPC,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,gCACE,oBAAGb,UAAWC,IAAEa,UAAhB,mBAAkCL,KAClC,oBAAGT,UAAWC,IAAEa,UAAhB,sBAAqCJ,KACrC,oBAAGV,UAAWC,IAAEa,UAAhB,kBAAiCH,KACjC,oBAAGX,UAAWC,IAAEa,UAAhB,oBAAmCF,KACnC,oBAAGZ,UAAWC,IAAEc,SAAhB,gCAA8CF,EAA9C,WAIJL,EAAWQ,WAAa,CACtBP,KAAMQ,IAAUC,OAAOC,WACvBT,QAASO,IAAUC,OAAOC,WAC1BR,IAAKM,IAAUC,OAAOC,WACtBP,MAAOK,IAAUC,OAAOC,WACxBC,gCAAiCH,IAAUC,OAAOC,YAGrCX,QCqDAa,E,4MAlEbC,MAAQ,CACNb,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPY,mBAAqB,WAAO,IAAD,EACM,EAAKD,MAGpC,OAJyB,EACjBb,KADiB,EACXC,QADW,EACFC,K,EAMzBS,gCAAkC,WAChC,IAAMR,EAAQ,EAAKW,qBACXd,EAAS,EAAKa,MAAdb,KAMR,OAJmCG,EAC/BY,KAAKC,MAAOhB,EAAOG,EAAS,KAC5B,G,EAKNc,oBAAsB,YAAiB,IAAdC,EAAa,EAAbA,OACvBC,QAAQC,IAAIF,GACZ,IAAM9B,EAAO8B,EAAOG,QAAQC,OAE5B,EAAKC,UAAS,SAAAC,GACZ,OAAO,eAAGpC,EAAOoC,EAAUpC,GAAQ,O,4CAIvC,WAAU,IAAD,EACwBqC,KAAKZ,MAA5Bb,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEjBwB,EAAiBD,KAAKX,qBACtBa,EAAoBF,KAAKd,kCAE/B,OACE,qCACE,cAAC,EAAD,CAAShB,MAAO,0BAAhB,SACE,cAAC,EAAD,CACEX,QARQ,CAAC,OAAQ,UAAW,OAS5BC,WAAYwC,KAAKR,wBAIrB,cAAC,EAAD,CAAStB,MAAO,aAAhB,SACGK,GAAQC,GAAWC,EAClB,cAAC,EAAD,CACEF,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOuB,EACPtB,mBAAoBuB,IAGtB,cAAC9B,EAAD,CAAqBC,QAAQ,0C,GA3DvB8B,aCHlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,UAAY,8BAA8B,SAAW,+B,kBCAvED,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.577ae3eb.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onFeedback }) => (\r\n  <div>\r\n    {options.map(option => (\r\n      <button\r\n        type=\"button\"\r\n        data-action={option}\r\n        onClick={onFeedback}\r\n        className={s.button}\r\n        key={option}\r\n      >\r\n        {option}\r\n      </button>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <div>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.element,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function NotificationMessage({ message }) {\r\n  return <p>{message}</p>;\r\n}\r\n\r\nNotificationMessage.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <div>\r\n    <p className={s.paragraph}>Good: {good}</p>\r\n    <p className={s.paragraph}>Neutral: {neutral}</p>\r\n    <p className={s.paragraph}>Bad: {bad}</p>\r\n    <p className={s.paragraph}>Total: {total}</p>\r\n    <p className={s.positive}>Positive feedback: {positivePercentage}%</p>\r\n  </div>\r\n);\r\n\r\nStatistics.protoTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  countPositiveFeedbackPercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import './App.css';\nimport React, { Component } from 'react';\n\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Section from './components/Section/Section';\nimport NotificationMessage from './components/NotificationMessage/NotificationMessage';\nimport Statistics from './components/Statistics/Statistics';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n\n    const total = good + neutral + bad;\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const total = this.countTotalFeedback();\n    const { good } = this.state;\n\n    const PositiveFeedbackPercentage = total\n      ? Math.round((good / total) * 100)\n      : 0;\n\n    return PositiveFeedbackPercentage;\n  };\n\n  onFeedbackIncrement = ({ target }) => {\n    console.dir(target);\n    const type = target.dataset.action;\n\n    this.setState(prevState => {\n      return { [type]: prevState[type] + 1 };\n    });\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const options = ['good', 'neutral', 'bad'];\n    const totalFeedbacks = this.countTotalFeedback();\n    const positiveFeedbacks = this.countPositiveFeedbackPercentage();\n\n    return (\n      <>\n        <Section title={'Pls leave your feedback'}>\n          <FeedbackOptions\n            options={options}\n            onFeedback={this.onFeedbackIncrement}\n          ></FeedbackOptions>\n        </Section>\n\n        <Section title={'Statistics'}>\n          {good || neutral || bad ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={totalFeedbacks}\n              positivePercentage={positiveFeedbacks}\n            />\n          ) : (\n            <NotificationMessage message=\"There is no one feedback yet\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paragraph\":\"Statistics_paragraph__30JMU\",\"positive\":\"Statistics_positive__3XJKH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__2nwi6\"};"],"sourceRoot":""}